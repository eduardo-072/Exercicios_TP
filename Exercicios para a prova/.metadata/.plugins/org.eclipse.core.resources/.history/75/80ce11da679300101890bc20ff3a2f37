package Exercicios_POO;
import java.util.Scanner;

public class Inversa {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int[][] I2 = {
            {1, 0, 0},
            {0, 1, 0},
            {0, 0, 1}
        };

        int matriz[][] = new int [3][3];

        // Inserindo valores dentro da Matriz
        System.out.println("Digite um valor para a matriz: ");
        for(int l = 0; l < 3; l++) {
            for(int c = 0; c < 3; c++) {
                System.out.println("Digite o valor para a posição [" + l + "] [" + c + "]: ");
                matriz[l][c] = scan.nextInt();
            }
        }

        // Exibindo a matriz original
        System.out.println();
        for (int l = 0; l < 3; l++) {
            for (int c = 0; c < 3; c++) {
                System.out.print(matriz[l][c] + " ");
            }
            System.out.println();
        }

        // Cálculos da segunda e terceira linha (como no seu código)
        int pivo1 = matriz[0][0];
        int nrNegativo1 = matriz[1][0] * -1;
        int nrNegativo2 = matriz[2][0] * -1;

        // Cálculo da Segunda Linha
        int L2_C1 = nrNegativo1 * matriz[0][0] + pivo1 * matriz[1][0];
        int L2_C2 = nrNegativo1 * matriz[0][1] + pivo1 * matriz[1][1];
        int L2_C3 = nrNegativo1 * matriz[0][2] + pivo1 * matriz[1][2];

        int L2_C4 = nrNegativo1 * I2[0][0] + pivo1 * I2[1][0];
        int L2_C5 = nrNegativo1 * I2[0][1] + pivo1 * I2[1][1];
        int L2_C6 = nrNegativo1 * I2[0][2] + pivo1 * I2[1][2];

        // Cálculo da Terceira Linha
        int L3_C1 = nrNegativo2 * matriz[0][0] + pivo1 * matriz[2][0];
        int L3_C2 = nrNegativo2 * matriz[0][1] + pivo1 * matriz[2][1];
        int L3_C3 = nrNegativo2 * matriz[0][2] + pivo1 * matriz[2][2];

        int L3_C4 = nrNegativo2 * I2[0][0] + pivo1 * I2[2][0];
        int L3_C5 = nrNegativo2 * I2[0][1] + pivo1 * I2[2][1];
        int L3_C6 = nrNegativo2 * I2[0][2] + pivo1 * I2[2][2];

        // Criando a nova matriz 2x6
        System.out.println("Nova Matriz 2x6:");
        int[][] novaMatriz = new int[2][6];
        novaMatriz[0][0] = L2_C1;
        novaMatriz[0][1] = L2_C2;
        novaMatriz[0][2] = L2_C3;
        novaMatriz[0][3] = L2_C4;
        novaMatriz[0][4] = L2_C5;
        novaMatriz[0][5] = L2_C6;

        novaMatriz[1][0] = L3_C1;
        novaMatriz[1][1] = L3_C2;
        novaMatriz[1][2] = L3_C3;
        novaMatriz[1][3] = L3_C4;
        novaMatriz[1][4] = L3_C5;
        novaMatriz[1][5] = L3_C6;

        for (int l = 0; l < 2; l++) {
            for (int c = 0; c < 6; c++) {
                System.out.print(novaMatriz[l][c] + " ");
            }
            System.out.println();
        }

        // Calculando a nova Matriz (matrizFinal 3x6)
        int nrNegativo3 = novaMatriz[1][1];
        int pivo2 = novaMatriz[0][1];

        // Calculando a Linha 3
        int l3_C1 = nrNegativo3 * novaMatriz[0][0] + pivo2 * novaMatriz[1][0];
        int l3_C2 = nrNegativo3 * novaMatriz[0][1] + pivo2 * novaMatriz[1][1];
        int l3_C3 = nrNegativo3 * novaMatriz[0][2] + pivo2 * novaMatriz[1][2];

        int l3_C4 = nrNegativo3 * novaMatriz[0][0] + pivo2 * I2[1][0];
        int l3_C5 = nrNegativo3 * novaMatriz[0][1] + pivo2 * I2[1][1];
        int l3_C6 = nrNegativo3 * novaMatriz[0][2] + pivo2 * I2[1][2];

        // Calculando a linha 1
        int nrNegativo4 = matriz[0][1];

        int L1_c1 = nrNegativo4 * matriz[0][0] + pivo2 * matriz[1][0];
        int L1_c2 = nrNegativo4 * matriz[0][1] + pivo2 * matriz[1][1];
        int L1_c3 = nrNegativo4 * matriz[0][2] + pivo2 * matriz[1][2];

        int L1_c4 = nrNegativo4 * I2[0][0] + pivo2 * I2[1][0];
        int L1_c5 = nrNegativo4 * I2[0][1] + pivo2 * I2[1][1];
        int L1_c6 = nrNegativo4 * I2[0][2] + pivo2 * I2[1][2];

        // Exibindo a matriz final 3x6
        System.out.println("Exibindo nova Matriz 3x6:");
        int[][] matrizFinal = new int[3][6];
        matrizFinal[0][0] = l3_C1;
        matrizFinal[0][1] = l3_C2;
        matrizFinal[0][2] = l3_C3;
        matrizFinal[0][3] = l3_C4;
        matrizFinal[0][4] = l3_C5;
        matrizFinal[0][5] = l3_C6;

        matrizFinal[1][0] = novaMatriz[0][0];
        matrizFinal[1][1] = novaMatriz[0][1];
        matrizFinal[1][2] = novaMatriz[0][2];
        matrizFinal[1][3] = novaMatriz[0][3];
        matrizFinal[1][4] = novaMatriz[0][4];
        matrizFinal[1][5] = novaMatriz[0][5];

        matrizFinal[2][0] = L1_c1;
        matrizFinal[2][1] = L1_c2;
        matrizFinal[2][2] = L1_c3;
        matrizFinal[2][3] = L1_c4;
        matrizFinal[2][4] = L1_c5;
        matrizFinal[2][5] = L1_c6;

        for (int l = 0; l < 3; l++) {
            for (int c = 0; c < 6; c++) {
                System.out.print(matrizFinal[l][c] + " ");
            }
            System.out.println();
        }
    }
}
